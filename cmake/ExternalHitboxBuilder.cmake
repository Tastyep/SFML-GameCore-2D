message(STATUS "[HitboxBuilder] Configuring external project")

include(ExternalProject)

set(HITBOX_BUILDER_DIR ${HITBOX_BUILDER_DIR})
set(HITBOX_BUILDER_TARGET hitbox-builder)
set(HITBOX_BUILDER_ROOT_DIR ${PROJECT_SOURCE_DIR}/${LIB_DIR}/${HITBOX_BUILDER_DIR})
set(HITBOX_BUILDER_SOURCE_DIR ${HITBOX_BUILDER_ROOT_DIR}/src/${HITBOX_BUILDER_TARGET}/HitboxBuilder)
set(HITBOX_BUILDER_BINARY_DIR ${HITBOX_BUILDER_ROOT_DIR}/src/${HITBOX_BUILDER_TARGET}-build)

# Configure external project
ExternalProject_Add(
  ${HITBOX_BUILDER_TARGET}
  PREFIX ${HITBOX_BUILDER_ROOT_DIR}
  GIT_REPOSITORY https://github.com/Tastyep/SFML-HitboxBuilder-2D
  GIT_TAG ${HITBOX_BUILDER_VERSION}
  GIT_PROGRESS 1
  TIMEOUT 60
  SOURCE_DIR ${HITBOX_BUILDER_SOURCE_DIR}
  BINARY_DIR ${HITBOX_BUILDER_BINARY_DIR}
  UPDATE_COMMAND ""
  CONFIGURE_COMMAND ${CMAKE_COMMAND}
    "-DCMAKE_INSTALL_PREFIX=${HITBOX_BUILDER_ROOT_DIR}"
    <SOURCE_DIR>
  BUILD_COMMAND $(MAKE)
  INSTALL_COMMAND $(MAKE) install
  LOG_DOWNLOAD ON
  LOG_CONFIGURE ON
  LOG_BUILD ON
  LOG_INSTALL ON
)

# Label target as third-party
set_target_properties(${HITBOX_BUILDER_TARGET} PROPERTIES LABELS HitboxBuilder FOLDER "Third Party")

# Define dependency directories, mimic the needed behavior of find_package
# NOTE: Variable names must respect the conventions of a cmake find-module
set(HITBOX_BUILDER_INCLUDE_DIRS ${HITBOX_BUILDER_ROOT_DIR}/include)
set(HITBOX_BUILDER_LIBRARY_DIRS ${HITBOX_BUILDER_ROOT_DIR}/lib)
set(HITBOX_BUILDER_LIBRARIES ${HITBOX_BUILDER_LIBRARY_DIRS}/libHitboxBuilder.a)
set(HITBOX_BUILDER_TARGETS ${HITBOX_BUILDER_TARGET})
